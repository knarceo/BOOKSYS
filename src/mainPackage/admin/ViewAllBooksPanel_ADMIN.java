/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPackage.admin;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows8.1
 */
public class ViewAllBooksPanel_ADMIN extends javax.swing.JPanel {

    private final String DATABSE_URL = "jdbc:derby://localhost:1527/libraryDb";
    private final String username = "oracle";
    private final String password = "pass";
    private final String GET_RECORDS = "SELECT * FROM TBLBOOKS ORDER BY ID ASC";

    private Connection connection;
    private PreparedStatement statement;
    private ResultSet resultset;
    private ResultSetMetaData rsMetadata;

    public ViewAllBooksPanel_ADMIN() {
        initComponents();
        try {
            connection = DriverManager.getConnection(DATABSE_URL, username, password);
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllBooksPanel_ADMIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void viewRecords() {
        try {

            statement = connection.prepareStatement(GET_RECORDS);
            resultset = statement.executeQuery();
            rsMetadata = resultset.getMetaData();

            DefaultTableModel dtmPrefix = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            dtmPrefix.addColumn("ID");
            dtmPrefix.addColumn("TITLE");
            dtmPrefix.addColumn("AUTHOR");
            dtmPrefix.addColumn("GENRE");
            dtmPrefix.addColumn("STATE");
            dtmPrefix.addColumn("STUDENT NUMBER");
            dtmPrefix.addColumn("DATE BORROWED");

            while (resultset.next()) {

                dtmPrefix.addRow(new Object[]{
                    resultset.getInt(1),
                    resultset.getString(2),
                    resultset.getString(3),
                    resultset.getString(4),
                    resultset.getString(5),
                    resultset.getString(6),
                    resultset.getString(7)
                });
                displayTable.setModel(dtmPrefix);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllBooksPanel_ADMIN.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panelActivate(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doubleClick(evt);
            }
        });
        jScrollPane2.setViewportView(displayTable);
        if (displayTable.getColumnModel().getColumnCount() > 0) {
            displayTable.getColumnModel().getColumn(0).setResizable(false);
            displayTable.getColumnModel().getColumn(1).setResizable(false);
            displayTable.getColumnModel().getColumn(2).setResizable(false);
            displayTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void panelActivate(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panelActivate
        viewRecords();

    }//GEN-LAST:event_panelActivate

    private void doubleClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doubleClick
       
            
        int rowTable = displayTable.getSelectedRow();

        Object id = displayTable.getValueAt(rowTable, 0);
        Object title = displayTable.getValueAt(rowTable, 1);
        Object author = displayTable.getValueAt(rowTable, 2);
        Object genre = displayTable.getValueAt(rowTable, 3);
        Object state = displayTable.getValueAt(rowTable, 4);
        Object sNumber = displayTable.getValueAt(rowTable, 5);
        Object date_borrowed = displayTable.getValueAt(rowTable, 6);

        if (evt.getClickCount() == 2) {
            JTable target = (JTable) evt.getSource();
            int row = target.getSelectedRow();

            JOptionPane.showMessageDialog(null, "ID: " + id + "\n"
                    + "Title: " + title + "\n"
                    + "Author: " + author + "\n"
                    + "Genre: " + genre + "\n"
                    + "State: " + state + "\n"
                    + "Student Number: " + sNumber + "\n"
                    + "Date Borrowed: " + date_borrowed + "\n"
            );

        }

        
    }//GEN-LAST:event_doubleClick

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable displayTable;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

//    public void populateJTable() throws SQLException {
//DefaultTableModel dtmPrefix = new DefaultTableModel();
//        dtmPrefix.addColumn("ID");
//        dtmPrefix.addColumn("TITLE");
//        dtmPrefix.addColumn("AUTHOR");
//        dtmPrefix.addColumn("GENRE");
//        Connection dbConnection = null;
//        
//
//        try {
//            String queryPrefix = "SELECT * FROM TBLBOOKS ORDER BY ID ASC";
//            dbConnection = getDBConnection();
//
//            Statement statementPrefix = dbConnection.createStatement();
//            ResultSet resultSetPrefix = statementPrefix.executeQuery(queryPrefix);
//
//            while (resultSetPrefix.next()) {
//
//                dtmPrefix.addRow(new Object[]{
//                    resultSetPrefix.getInt(1),
//                    resultSetPrefix.getString(2),
//                    resultSetPrefix.getString(3),
//                    resultSetPrefix.getString(4)
//                });
//                displayTable.setModel(dtmPrefix);
//            }
//        } catch (SQLException preEr) {
//            JOptionPane.showMessageDialog(null, preEr, "DATABASE ERROR!", JOptionPane.WARNING_MESSAGE);
//        }
//
//    }
//
//    private static Connection getDBConnection() {
//
//        Connection dbConnection = null;
//
//        try {
//
//            dbConnection = DriverManager.getConnection(
//                    DATABSE_URL, username, password);
//            return dbConnection;
//
//        } catch (SQLException e) {
//
//            System.out.println(e.getMessage());
//
//        }
//
//        return dbConnection;
//
//    }
//
}
